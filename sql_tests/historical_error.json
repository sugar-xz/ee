[
  {
    'url': '/api/v1/user/auth/register',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'np94jti5ai54rrvpjr166cdx4oa7umxc\' AND "django_session"."expire_date" > \'2020-02-26T03:09:08.085160+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."username" = \'turingtest@turingvideo.net\' LIMIT 1',
      'INSERT INTO "auth_user" ("password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username", "updated_at", "role", "lang", "nonce", "timezone") VALUES (\'pbkdf2_sha256$36000$JkVQbFeL1hib$BGkniSsdAjeUSI1xHDM001zVVoaqiHiJiOTaz5RUE6Y=\', NULL, false, \'turing\', \'test\', \'turingtest@turingvideo.net\', false, true, \'2020-02-26T03:09:13.204710+00:00\'::timestamptz, \'turingtest@turingvideo.net\', \'2020-02-26T03:09:13.219463+00:00\'::timestamptz, \'customer\', \'en\', \'\', \'America/Los_Angeles\') RETURNING "auth_user"."id"',
      'INSERT INTO "logic_person" ("created_at", "updated_at", "id") VALUES (\'2020-02-26T03:09:13.220566+00:00\'::timestamptz, \'2020-02-26T03:09:13.220588+00:00\'::timestamptz, 24)',
      'INSERT INTO "logic_monitor" ("created_at", "updated_at", "id", "version", "box_version", "robot_version", "camera_version", "event_version", "route_version") VALUES (\'2020-02-26T03:09:13.221311+00:00\'::timestamptz, \'2020-02-26T03:09:13.221345+00:00\'::timestamptz, 24, 0, 0, 0, 0, 0, 0)',
      'INSERT INTO "bill_customer" ("created_at", "updated_at", "id", "stripe_id", "status", "balance", "guard_company_id", "enable_monitoring_service") VALUES (\'2020-02-26T03:09:13.222072+00:00\'::timestamptz, \'2020-02-26T03:09:13.222094+00:00\'::timestamptz, 24, \'cus_Gns0nC9Dpi5Kq9\', \'paid\', \'0.00\', NULL, false)',
      'SELECT "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_organization" WHERE "logic_organization"."owner_id" = 24 ORDER BY "logic_organization"."id" ASC LIMIT 1',
      'INSERT INTO "logic_organization" ("created_at", "updated_at", "code_name", "name", "owner_id", "event_type_mode") VALUES (\'2020-02-26T03:09:13.224433+00:00\'::timestamptz, \'2020-02-26T03:09:13.224457+00:00\'::timestamptz, \'turingtest@turingvideo.net\', \'Turingtest@turingvideo.net\', 24, \'sys_and_customized\') RETURNING "logic_organization"."id"',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 24',
      'INSERT INTO "org_organizationuser" ("organization_id", "user_id") VALUES (13, 24) RETURNING "org_organizationuser"."id"',
      'SELECT MAX("org_usernode"."tree_id") AS "tree_id__max" FROM "org_usernode"',
      'INSERT INTO "org_usernode" ("user_id", "parent_id", "lft", "rght", "tree_id", "level") VALUES (24, NULL, 1, 2, 3, 0) RETURNING "org_usernode"."id"'
    ],
    'warning': [
      {
        'prefix': "select auth_user [] ['auth_user.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/authenticate',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'l42qf6sfeptmtjibiqva9eht9mg0h6et\' AND "django_session"."expire_date" > \'2020-02-26T03:09:18.863656+00:00\'::timestamptz)',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') LIMIT 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') LIMIT 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'UPDATE "logic_box" SET "updated_at" = \'2020-02-26T03:09:18.880867+00:00\'::timestamptz, "ip_address" = \'192.168.1.85\'::inet, "max_camera_cnt" = 20, "max_detect_cnt" = 20, "meta" = \'{"agent":{"name":"Box","level":0,"version":"1.0.0"}}\', "type" = \'test_lee\', "version" = ("logic_box"."version" + 1) WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:09:18.884462+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "box_version" = ("logic_monitor"."box_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "LevelRequirement"."id", "LevelRequirement"."tag", "LevelRequirement"."service", "LevelRequirement"."level", "LevelRequirement"."version" FROM "LevelRequirement"'
    ],
    'errors': [
      {
        'sql': 'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number':, 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/debug_login',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'ljzniy6via00y20yagomt6qjhm10xwa1\' AND "django_session"."expire_date" > \'2020-02-26T03:09:25.271710+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') LIMIT 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') LIMIT 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT "logic_devicekey"."created_at", "logic_devicekey"."updated_at", "logic_devicekey"."id", "logic_devicekey"."signature", "logic_devicekey"."public_key" FROM "logic_devicekey" WHERE "logic_devicekey"."id" = \'box_dog_sr_50006\'',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\''
    ],
    'errors': [
      {
        'sql': 'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\') LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/create_or_update_cameras',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'ljzniy6via00y20yagomt6qjhm10xwa1\' AND "django_session"."expire_date" > \'2020-02-26T03:09:25.407837+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' ORDER BY "logic_box"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'box\' AND T5."type" = \'test_lee\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' FOR UPDATE',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1 LIMIT 1',
      'SELECT "logic_camera"."mac_address" FROM "logic_camera" WHERE "logic_camera"."mac_address" IN (\'b8:f2:4d:b0:21:17\')',
      'SELECT "logic_camera"."name" FROM "logic_camera" WHERE ("logic_camera"."name" IN (\'camera_name\') AND "logic_camera"."user_id" = 1)',
      'SELECT COUNT(*) AS "__count" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'INSERT INTO "logic_camera" ("created_at", "updated_at", "user_id", "saving_at", "name", "raw_address", "mac_address", "box_id", "type", "brand", "username", "password", "uri", "hd_uri", "mode", "upload_video_enabled", "location", "detect_params", "snapshot", "state", "notifies", "should_push", "version", "note", "default_params") VALUES (\'2020-02-26T03:09:25.774273+00:00\'::timestamptz, \'2020-02-26T03:09:25.774311+00:00\'::timestamptz, 1, NULL, \'camera_name\', \'b8:f2:4d:b0:21:17\', \'b8:f2:4d:b0:21:17\', \'box_dog_sr_50006\', \'\', \'\', \'admin\', \'q123456\', \'rtsp://192.168.1.101/cam/realmonitor?channel=6&subtype=1\', \'rtsp://192.168.1.101/cam/realmonitor?channel=6&subtype=0\', \'on\', true, NULL, \'{"threshold":0.800000011920929}\', \'{}\', \'process\', \'\', true, 0, \'{}\', \'{}\') RETURNING "logic_camera"."id"',
      'INSERT INTO "logic_rule" ("created_at", "updated_at", "camera_id", "unique_id", "name", "mode", "version", "start_at", "end_at", "region", "algos", "params", "algo", "schedule", "params_base") VALUES (\'2020-02-26T03:09:25.775892+00:00\'::timestamptz, \'2020-02-26T03:09:25.775932+00:00\'::timestamptz, 12, \'8bd36625-b8b8-43eb-9107-895a49a5d204\'::uuid, \'Default Rule\', \'schedule\', 0, 0, 0, \'\', \'\', \'{}\', \'person:0\', \'{"type":"daily"}\', \'\') RETURNING "logic_rule"."id"',
      'UPDATE "logic_box" SET "updated_at" = \'2020-02-26T03:09:25.777154+00:00\'::timestamptz, "camera_cnt" = 15, "sequence" = 36, "version" = ("logic_box"."version" + 1) WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:09:25.778468+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "box_version" = ("logic_monitor"."box_version" + 1), "camera_version" = ("logic_monitor"."camera_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" = 12',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" = 12'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" = 12',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/create_or_update_cameras',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'fp15phz0v5kyvcuyeslyzx4g6w9vcos3\' AND "django_session"."expire_date" > \'2020-02-26T03:09:36.576778+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' ORDER BY "logic_box"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'box\' AND T5."type" = \'test_lee\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' FOR UPDATE',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1 LIMIT 1',
      'SELECT "logic_camera"."mac_address" FROM "logic_camera" WHERE "logic_camera"."mac_address" IN (\'3c:ef:6c:13:dd:75\')',
      'SELECT "logic_camera"."name" FROM "logic_camera" WHERE ("logic_camera"."name" IN (\'test_update\') AND "logic_camera"."user_id" = 1)',
      'SELECT COUNT(*) AS "__count" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."mac_address" IN (\'3c:ef:6c:13:dd:75\')',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (4)',
      'DELETE FROM "logic_rule" WHERE "logic_rule"."id" IN (8)',
      'INSERT INTO "logic_rule" ("created_at", "updated_at", "id", "camera_id", "unique_id", "name", "mode", "version", "start_at", "end_at", "region", "algos", "params", "algo", "schedule", "params_base") VALUES (\'2019-10-25T06:38:20.403987+00:00\'::timestamptz, \'2020-02-26T03:09:36.647166+00:00\'::timestamptz, 8, 4, \'df2c4981-96be-43f2-8cd5-7f580d6ecb42\'::uuid, \'Default Rule\', \'on\', 0, 0, 0, \'\', \'person\', \'{}\', \'person:0\', \'{}\', \'\') RETURNING "logic_rule"."id"',
      'UPDATE "logic_camera" SET "created_at" = \'2019-10-25T06:38:20.402880+00:00\'::timestamptz, "updated_at" = \'2020-02-26T03:09:36.648453+00:00\'::timestamptz, "user_id" = 1, "saving_at" = NULL, "name" = \'cameraA\', "raw_address" = \'3c:ef:6c:13:dd:75\', "mac_address" = \'3c:ef:6c:13:dd:75\', "box_id" = \'box_dog_sr_50006\', "type" = \'\', "brand" = \'\', "username" = \'admin\', "password" = \'q1234567\', "uri" = \'rtsp://192.168.1.101/cam/realmonitor?channel=6&subtype=1\', "hd_uri" = \'rtsp://192.168.1.101/cam/realmonitor?channel=6&subtype=0\', "mode" = \'on\', "upload_video_enabled" = true, "location" = NULL, "detect_params" = \'{"threshold":0.800000011920929}\', "snapshot" = \'{}\', "state" = \'process\', "notifies" = \'\', "should_push" = true, "version" = 0, "note" = \'{}\', "default_params" = \'{}\' WHERE "logic_camera"."id" = 4',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:09:36.650062+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1) WHERE "logic_monitor"."id" = 1'
    ],
    'warning': [
      {
        'prefix': "select logic_camera [] ['logic_camera.mac_address.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/camera/cameras/differences',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'9792zf9z01bbvvf1ark1htw5strxpatl\' AND "django_session"."expire_date" > \'2020-02-26T03:09:40.881222+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" IS NULL ORDER BY "logic_box"."id" ASC LIMIT 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.camera\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1 ORDER BY "auth_user"."id" ASC LIMIT 1',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 9',
      'SELECT (t._actions) AS "_actions", "logic_camera"."id", "logic_camera"."version" FROM "logic_camera" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_camera"."id", (select \'create,retrieve,update,destroy,map_location,save_video,stream,capture_case\') AS "_actions" FROM "logic_camera" WHERE "logic_camera"."user_id" = 1) as t group by id) as t WHERE (t.id = logic_camera.id)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_camera" LEFT OUTER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") WHERE "logic_camera"."id" IN (1, 2, 3, 4, 5, 12)',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1, 2, 3, 4, 5, 12)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "algorithm_productalgorithm"."id", "algorithm_productalgorithm"."created_at", "algorithm_productalgorithm"."updated_at", "algorithm_productalgorithm"."category", "algorithm_productalgorithm"."product_type_id", "algorithm_productalgorithm"."algorithm_id", "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta", "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_productalgorithm" INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_productalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE ("algorithm_productalgorithm"."category" = \'box\' AND "algorithm_producttype"."type" IN (\'test_lee\'))',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."organization_id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "logic_organization"."id", "logic_organization"."owner_id", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" IN (1, 12)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50002\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\''
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 5
      }
    ],
    'warning': [
      {
        'prefix': "select logic_camera [] ['logic_camera.box_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/box_dog_sr_50006',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'7g3zkv6dvlqeq7d9r32y77ge8pwzezr4\' AND "django_session"."expire_date" > \'2020-02-26T03:10:07.810329+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.box\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 10',
      'SELECT (t._actions) AS "_actions", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_box"."id", (select \'retrieve,update,claim,unclaim,meta,validate_camera,validate_dvr,search\') AS "_actions" FROM "logic_box" WHERE "logic_box"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_box.id) AND "logic_box"."id" = \'box_dog_sr_50006\') ORDER BY "logic_box"."id" ASC',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/camera/cameras/1',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'w3xd88ktddnoc9n153sm00lcvlan797a\' AND "django_session"."expire_date" > \'2020-02-26T03:10:08.537383+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_camera" LEFT OUTER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") WHERE "logic_camera"."id" = 1',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.camera\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 9',
      'SELECT (t._actions) AS "_actions", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_camera" LEFT OUTER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_camera"."id", (select \'create,retrieve,update,destroy,map_location,save_video,stream,capture_case\') AS "_actions" FROM "logic_camera" WHERE "logic_camera"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_camera.id) AND "logic_camera"."id" = 1) ORDER BY "logic_camera"."id" ASC',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "algorithm_productalgorithm"."id", "algorithm_productalgorithm"."created_at", "algorithm_productalgorithm"."updated_at", "algorithm_productalgorithm"."category", "algorithm_productalgorithm"."product_type_id", "algorithm_productalgorithm"."algorithm_id", "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta", "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_productalgorithm" INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_productalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE ("algorithm_productalgorithm"."category" = \'box\' AND "algorithm_producttype"."type" IN (\'test_lee\'))',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."organization_id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "logic_organization"."id", "logic_organization"."owner_id", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" IN (1)'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/box_dog_sr_50006',
    'type': 'PUT',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'3z9n8apm0raucxeals97pctywsbb3rla\' AND "django_session"."expire_date" > \'2020-02-26T03:10:15.173352+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.box\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 10',
      'SELECT (t._actions) AS "_actions", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_box"."id", (select \'retrieve,update,claim,unclaim,meta,validate_camera,validate_dvr,search\') AS "_actions" FROM "logic_box" WHERE "logic_box"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_box.id) AND "logic_box"."id" = \'box_dog_sr_50006\') ORDER BY "logic_box"."id" ASC',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' FOR UPDATE',
      'UPDATE "logic_box" SET "created_at" = \'2019-08-19T07:17:43.610953+00:00\'::timestamptz, "updated_at" = \'2020-02-26T03:10:15.251385+00:00\'::timestamptz, "user_id" = 1, "timezone" = \'\', "ip_address" = \'192.168.1.85\'::inet, "max_camera_cnt" = 20, "max_detect_cnt" = 20, "paid_cnt" = 0, "camera_cnt" = 15, "state" = \'offline\', "billing" = \'paid\', "meta" = \'{"agent":{"name":"Box","level":0,"version":"1.0.0"}}\', "type" = \'test_lee\', "scene" = 213, "sequence" = 38, "upload_video_expire" = 1209600, "upload_event_expire" = 1209600, "session_id" = \'chn545c4fdb561d6101a9e598ec941ab\', "version" = ("logic_box"."version" + 1), "site_id" = 1 WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\''
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ],
    'warning': [
      {
        'prefix': "select logic_camera [] ['logic_camera.box_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/box/boxes/box_dog_sr_50006',
    'type': 'PUT',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'23vcmvxtsz1vrdlni317eqrkuztldgk3\' AND "django_session"."expire_date" > \'2020-02-26T03:10:16.299012+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.box\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 10',
      'SELECT (t._actions) AS "_actions", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_box"."id", (select \'retrieve,update,claim,unclaim,meta,validate_camera,validate_dvr,search\') AS "_actions" FROM "logic_box" WHERE "logic_box"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_box.id) AND "logic_box"."id" = \'box_dog_sr_50006\') ORDER BY "logic_box"."id" ASC',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/camera/cameras',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'arymqwh9aviw4pbpn1pkqme4ltdm6ow1\' AND "django_session"."expire_date" > \'2020-02-26T03:10:18.375202+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' ORDER BY "logic_box"."id" ASC LIMIT 1',
      'SELECT "algorithm_productalgorithm"."id", "algorithm_productalgorithm"."created_at", "algorithm_productalgorithm"."updated_at", "algorithm_productalgorithm"."category", "algorithm_productalgorithm"."product_type_id", "algorithm_productalgorithm"."algorithm_id", "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta", "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_productalgorithm" INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_productalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE ("algorithm_productalgorithm"."category" = \'box\' AND "algorithm_producttype"."type" IN (\'test_lee\'))',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."organization_id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "logic_organization"."id", "logic_organization"."owner_id", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" IN (1)',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.camera\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'create\']::varchar(127)[]) AND "perm_role"."code_name" IN (\'customer\'))',
      'SELECT (1) AS "a" FROM "logic_camera" WHERE "logic_camera"."mac_address" = \'3c:ef:cc:53:dd:75\' LIMIT 1',
      'SELECT (1) AS "a" FROM "logic_camera" WHERE ("logic_camera"."user_id" = 1 AND "logic_camera"."name" = \'sugar_camera\') LIMIT 1',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1 LIMIT 1',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE ("logic_box"."user_id" = 1 AND "logic_box"."id" = \'box_dog_sr_50006\') FOR UPDATE',
      'SELECT COUNT(*) AS "__count" FROM "logic_camera" WHERE ("logic_camera"."box_id" = \'box_dog_sr_50006\' AND "logic_camera"."mode" = \'on\')',
      'INSERT INTO "logic_camera" ("created_at", "updated_at", "user_id", "saving_at", "name", "raw_address", "mac_address", "box_id", "type", "brand", "username", "password", "uri", "hd_uri", "mode", "upload_video_enabled", "location", "detect_params", "snapshot", "state", "notifies", "should_push", "version", "note", "default_params") VALUES (\'2020-02-26T03:10:18.454758+00:00\'::timestamptz, \'2020-02-26T03:10:18.454799+00:00\'::timestamptz, 1, NULL, \'sugar_camera\', \'3c:ef:cc:53:dd:75\', \'3c:ef:cc:53:dd:75\', \'box_dog_sr_50006\', \'\', \'\', \'admin\', \'a123456\', \'https://www.turingvideo.com\', \'https://www.turingvideo.com\', \'on\', true, \'{"lat":0.0,"lng":0.0}\', \'{"threshold":0.5}\', \'{}\', \'process\', \'\', true, 0, \'{}\', \'{}\') RETURNING "logic_camera"."id"',
      'INSERT INTO "logic_rule" ("created_at", "updated_at", "camera_id", "unique_id", "name", "mode", "version", "start_at", "end_at", "region", "algos", "params", "algo", "schedule", "params_base") VALUES (\'2020-02-26T03:10:18.456179+00:00\'::timestamptz, \'2020-02-26T03:10:18.456205+00:00\'::timestamptz, 13, \'55d50189-f154-4c73-88d8-e571b3c2b83e\'::uuid, \'rule1\', \'on\', 0, 0, 1, \'0.151,0.513,0.234,0.135\', \'\', \'{}\', \'\', \'{}\', \'\') RETURNING "logic_rule"."id"',
      'UPDATE "logic_box" SET "updated_at" = \'2020-02-26T03:10:18.457440+00:00\'::timestamptz, "camera_cnt" = 16, "sequence" = 40, "version" = ("logic_box"."version" + 1) WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:10:18.459774+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "box_version" = ("logic_monitor"."box_version" + 1), "camera_version" = ("logic_monitor"."camera_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' ORDER BY "logic_box"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'box\' AND T5."type" = \'test_lee\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' ORDER BY "logic_box"."id" ASC LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ],
    'warning': [
      {
        'prefix': "select logic_customizedalgorithm ['logic_organization', 'algorithm_algorithm'] ['logic_organization.owner_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/camera/cameras/5',
    'type': 'DELETE',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'dq6g8v6je6yusu1o1s0wr19b2szvcikn\' AND "django_session"."expire_date" > \'2020-02-26T03:10:20.238518+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.camera\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'destroy\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 9',
      'SELECT (t._actions) AS "_actions", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_camera" LEFT OUTER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_camera"."id", (select \'create,retrieve,update,destroy,map_location,save_video,stream,capture_case\') AS "_actions" FROM "logic_camera" WHERE "logic_camera"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_camera.id) AND "logic_camera"."id" = 5) ORDER BY "logic_camera"."id" ASC',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (5)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1',
      'SELECT "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag" FROM "logic_event" WHERE "logic_event"."camera_id" IN (5) LIMIT 300',
      'SELECT "logic_cameravideo"."created_at", "logic_cameravideo"."updated_at", "logic_cameravideo"."id", "logic_cameravideo"."camera_id", "logic_cameravideo"."started_at", "logic_cameravideo"."ended_at", "logic_cameravideo"."size", "logic_cameravideo"."video" FROM "logic_cameravideo" WHERE "logic_cameravideo"."camera_id" IN (5) LIMIT 800',
      'SELECT "logic_snap"."created_at", "logic_snap"."updated_at", "logic_snap"."id", "logic_snap"."camera_id", "logic_snap"."timestamp", "logic_snap"."file", "logic_snap"."type" FROM "logic_snap" WHERE "logic_snap"."camera_id" IN (5) LIMIT 800',
      'SELECT "logic_camerasavedvideo"."created_at", "logic_camerasavedvideo"."updated_at", "logic_camerasavedvideo"."id", "logic_camerasavedvideo"."camera_id", "logic_camerasavedvideo"."started_at", "logic_camerasavedvideo"."ended_at", "logic_camerasavedvideo"."snapshot", "logic_camerasavedvideo"."video" FROM "logic_camerasavedvideo" WHERE "logic_camerasavedvideo"."camera_id" IN (5) LIMIT 400',
      'SELECT "logic_camera"."id", "logic_camera"."snapshot" FROM "logic_camera" WHERE "logic_camera"."id" IN (5) ORDER BY "logic_camera"."id" ASC LIMIT 800',
      'SELECT "logic_camera"."id", "logic_camera"."snapshot" FROM "logic_camera" WHERE "logic_camera"."id" IN (5) ORDER BY "logic_camera"."id" ASC LIMIT 800 OFFSET 1',
      'SELECT "auth_user"."id" FROM "auth_user" WHERE "auth_user"."id" = 1 FOR UPDATE',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' FOR UPDATE',
      'UPDATE "logic_box" SET "updated_at" = \'2020-02-26T03:10:20.272877+00:00\'::timestamptz, "camera_cnt" = 15, "sequence" = 41, "version" = ("logic_box"."version" + 1) WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'DELETE FROM logic_medium WHERE event_id in (SELECT id FROM logic_event WHERE camera_id = 5)',
      'DELETE FROM logic_event WHERE camera_id = 5',
      'SELECT "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag" FROM "logic_event" WHERE "logic_event"."camera_id" IN (5)',
      'SELECT "logic_eventbackup"."created_at", "logic_eventbackup"."updated_at", "logic_eventbackup"."id", "logic_eventbackup"."origin_id", "logic_eventbackup"."source", "logic_eventbackup"."robot_id", "logic_eventbackup"."robot_camera", "logic_eventbackup"."camera_id", "logic_eventbackup"."location", "logic_eventbackup"."types", "logic_eventbackup"."types_bits", "logic_eventbackup"."started_at", "logic_eventbackup"."ended_at", "logic_eventbackup"."data", "logic_eventbackup"."marked", "logic_eventbackup"."viewed", "logic_eventbackup"."annotate", "logic_eventbackup"."tag" FROM "logic_eventbackup" WHERE "logic_eventbackup"."camera_id" IN (5)',
      'DELETE FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (5)',
      'DELETE FROM "logic_snap" WHERE "logic_snap"."camera_id" IN (5)',
      'DELETE FROM "logic_cameravideo" WHERE "logic_cameravideo"."camera_id" IN (5)',
      'DELETE FROM "logic_camerasavedvideo" WHERE "logic_camerasavedvideo"."camera_id" IN (5)',
      'DELETE FROM "logic_cameralocation" WHERE "logic_cameralocation"."camera_id" IN (5)',
      'DELETE FROM "logic_camera" WHERE "logic_camera"."id" IN (5)',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:10:20.282505+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "box_version" = ("logic_monitor"."box_version" + 1), "camera_version" = ("logic_monitor"."camera_version" + 1) WHERE "logic_monitor"."id" = 1'
    ],
    'errors': [
      {
        'error_type': 'sql_much',
        'error_info': 'Interface calls SQL statements too many, the sql_number parameter value is exceeded.',
        'sql_number': 26
      }
    ]
  },
  {
    'url': '/api/v1/camera/cameras/1',
    'type': 'PUT',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'fsf6vtxc9k97lo7cpgrqn0b9y2eipy6k\' AND "django_session"."expire_date" > \'2020-02-26T03:10:20.707552+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_camera" LEFT OUTER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") WHERE "logic_camera"."id" = 1',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.camera\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]) AND "perm_role"."code_name" IN (\'customer\'))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 9',
      'SELECT (t._actions) AS "_actions", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_camera" LEFT OUTER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_camera"."id", (select \'create,retrieve,update,destroy,map_location,save_video,stream,capture_case\') AS "_actions" FROM "logic_camera" WHERE "logic_camera"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_camera.id) AND "logic_camera"."id" = 1) ORDER BY "logic_camera"."id" ASC',
      'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."id" = \'box_dog_sr_50006\' ORDER BY "logic_box"."id" ASC LIMIT 1',
      'SELECT "algorithm_productalgorithm"."id", "algorithm_productalgorithm"."created_at", "algorithm_productalgorithm"."updated_at", "algorithm_productalgorithm"."category", "algorithm_productalgorithm"."product_type_id", "algorithm_productalgorithm"."algorithm_id", "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta", "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_productalgorithm" INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_productalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE ("algorithm_productalgorithm"."category" = \'box\' AND "algorithm_producttype"."type" IN (\'test_lee\'))',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."organization_id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "logic_organization"."id", "logic_organization"."owner_id", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" IN (1)',
      'SELECT (1) AS "a" FROM "logic_camera" WHERE ("logic_camera"."mac_address" = \'3c:ef:cc:53:dd:85\' AND NOT ("logic_camera"."id" = 1)) LIMIT 1',
      'SELECT (1) AS "a" FROM "logic_camera" WHERE ("logic_camera"."user_id" = 1 AND "logic_camera"."name" = \'sugar_camera_test\' AND NOT ("logic_camera"."id" = 1)) LIMIT 1',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1 LIMIT 1',
      'SELECT "auth_user"."id" FROM "auth_user" WHERE "auth_user"."id" = 1 FOR UPDATE',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE ("logic_camera"."user_id" = 1 AND "logic_camera"."id" = 1)',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE ("logic_box"."user_id" = 1 AND "logic_box"."id" IN (\'box_dog_sr_50006\')) FOR UPDATE',
      'SELECT COUNT(*) AS "__count" FROM "logic_camera" WHERE ("logic_camera"."box_id" = \'box_dog_sr_50006\' AND "logic_camera"."mode" = \'on\' AND NOT ("logic_camera"."id" = 1))',
      'DELETE FROM "logic_rule" WHERE "logic_rule"."id" IN (6)',
      'INSERT INTO "logic_rule" ("created_at", "updated_at", "id", "camera_id", "unique_id", "name", "mode", "version", "start_at", "end_at", "region", "algos", "params", "algo", "schedule", "params_base") VALUES (\'2019-08-15T06:31:31.246439+00:00\'::timestamptz, \'2020-02-26T03:10:20.833454+00:00\'::timestamptz, 6, 1, \'df2c4981-96be-43f2-8cd5-7f580d6ecb40\'::uuid, \'rule1\', \'on\', 0, 0, 1, \'0.151,0.513,0.234,0.135\', \'person\', \'{}\', \'\', \'{}\', \'\') RETURNING "logic_rule"."id"',
      'UPDATE "logic_camera" SET "created_at" = \'2019-08-19T08:33:31.160557+00:00\'::timestamptz, "updated_at" = \'2020-02-26T03:10:20.835997+00:00\'::timestamptz, "user_id" = 1, "saving_at" = NULL, "name" = \'sugar_camera_test\', "raw_address" = \'3c:ef:cc:53:dd:85\', "mac_address" = \'3c:ef:cc:53:dd:85\', "box_id" = \'box_dog_sr_50006\', "type" = \'test_lee\', "brand" = \'\', "username" = \'admin\', "password" = \'s123456\', "uri" = \'https://www.turingvideo.com\', "hd_uri" = \'https://www.turingvideo.com/up\', "mode" = \'on\', "upload_video_enabled" = true, "location" = \'{"lat":0.0,"lng":0.0}\', "detect_params" = \'{"threshold":0.5}\', "snapshot" = \'{"Key":"key","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"size":[640,360],"content_type":"image/jpeg"}}\', "state" = \'ready\', "notifies" = \'\', "should_push" = true, "version" = ("logic_camera"."version" + 1), "note" = \'{}\', "default_params" = \'{}\' WHERE "logic_camera"."id" = 1',
      'UPDATE "logic_box" SET "updated_at" = \'2020-02-26T03:10:20.838348+00:00\'::timestamptz, "camera_cnt" = 15, "sequence" = 42, "version" = 112 WHERE "logic_box"."id" = \'box_dog_sr_50006\'',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:10:20.839629+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "camera_version" = ("logic_monitor"."camera_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" = \'box_dog_sr_50006\'',
      'SELECT "algorithm_productalgorithm"."id", "algorithm_productalgorithm"."created_at", "algorithm_productalgorithm"."updated_at", "algorithm_productalgorithm"."category", "algorithm_productalgorithm"."product_type_id", "algorithm_productalgorithm"."algorithm_id", "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta", "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_productalgorithm" INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_productalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE ("algorithm_productalgorithm"."category" = \'box\' AND "algorithm_producttype"."type" IN (\'test_lee\'))',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."organization_id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "logic_organization"."id", "logic_organization"."owner_id", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" IN (1)'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_rule"."created_at", "logic_rule"."updated_at", "logic_rule"."id", "logic_rule"."camera_id", "logic_rule"."unique_id", "logic_rule"."name", "logic_rule"."mode", "logic_rule"."version", "logic_rule"."start_at", "logic_rule"."end_at", "logic_rule"."region", "logic_rule"."algos", "logic_rule"."params", "logic_rule"."algo", "logic_rule"."schedule", "logic_rule"."params_base" FROM "logic_rule" WHERE "logic_rule"."camera_id" IN (1)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "algorithm_productalgorithm"."id", "algorithm_productalgorithm"."created_at", "algorithm_productalgorithm"."updated_at", "algorithm_productalgorithm"."category", "algorithm_productalgorithm"."product_type_id", "algorithm_productalgorithm"."algorithm_id", "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta", "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_productalgorithm" INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_productalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE ("algorithm_productalgorithm"."category" = \'box\' AND "algorithm_producttype"."type" IN (\'test_lee\'))',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."organization_id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "logic_organization"."id", "logic_organization"."owner_id", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" IN (1)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."box_id" IN (\'box_dog_sr_50006\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'error_type': 'sql_much',
        'error_info': 'Interface calls SQL statements too many, the sql_number parameter value is exceeded.',
        'sql_number': 22
      }
    ],
    'warning': [
      {
        'prefix': "select logic_camera [] ['logic_camera.box_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/event/events/camera',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'i8f87v6z3weva4fg07apz7uqm000lh25\' AND "django_session"."expire_date" > \'2020-02-26T03:10:23.511345+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id", "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone", "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_camera" INNER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") LEFT OUTER JOIN "auth_user" ON ("logic_box"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") WHERE ("logic_camera"."id" = 1 AND "logic_camera"."box_id" = \'box_dog_sr_50006\') ORDER BY "logic_camera"."id" ASC LIMIT 1',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
      'SELECT "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."name", "logic_camera"."box_id", "logic_camera"."location", "logic_camera"."notifies", "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone", "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version", "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode", "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_camera" INNER JOIN "logic_box" ON ("logic_camera"."box_id" = "logic_box"."id") INNER JOIN "auth_user" ON ("logic_camera"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_monitor" ON ("auth_user"."id" = "logic_monitor"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") LEFT OUTER JOIN "logic_site" ON ("logic_box"."site_id" = "logic_site"."id") WHERE ("logic_camera"."id" = 1 AND "logic_camera"."box_id" = \'box_dog_sr_50006\')',
      'INSERT INTO "logic_event" ("created_at", "updated_at", "source", "robot_id", "robot_camera", "camera_id", "site_id", "location", "types", "types_bits", "started_at", "ended_at", "data", "marked", "viewed", "annotate", "tag") VALUES (\'2020-02-26T03:10:23.985864+00:00\'::timestamptz, \'2020-02-26T03:10:23.985894+00:00\'::timestamptz, \'camera\', NULL, \'front\', 1, 1, \'{"lat":0.0,"lng":0.0}\', \'person\', X\'80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\', \'2019-10-13T06:00:57.262076+00:00\'::timestamptz, \'2019-10-14T06:01:57.262076+00:00\'::timestamptz, \'{"threshold":0.5}\', false, false, \'unknown\', \'\') RETURNING "logic_event"."id"',
      'INSERT INTO "logic_medium" ("created_at", "updated_at", "event_id", "name", "file", "data") VALUES (\'2020-02-26T03:10:23.989012+00:00\'::timestamptz, \'2020-02-26T03:10:23.989034+00:00\'::timestamptz, 12, \'snapshot\', \'{"Key":"users/1/cameras/1/events/logo.jpg","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"size":[640,360],"content_type":"image/jpeg"}}\', \'{}\'), (\'2020-02-26T03:10:23.989123+00:00\'::timestamptz, \'2020-02-26T03:10:23.989141+00:00\'::timestamptz, 12, \'bbox\', \'{"Key":"users/3/cameras/3/events/0dc87e3","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"size":[640,360],"content_type":"text/json"}}\', \'{}\'), (\'2020-02-26T03:10:23.989215+00:00\'::timestamptz, \'2020-02-26T03:10:23.989232+00:00\'::timestamptz, 12, \'video\', \'{"Key":"users/3/cameras/3/events/0dc87e3","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"size":[640,360],"content_type":"video/mp4"}}\', \'{"started_at":"2019-10-14T06:00:57.262Z","ended_at":"2019-10-14T06:01:57.262Z"}\') RETURNING "logic_medium"."id"',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:10:23.990449+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "event_version" = ("logic_monitor"."event_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_organization" WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "bill_customer"."created_at", "bill_customer"."updated_at", "bill_customer"."id", "bill_customer"."stripe_id", "bill_customer"."status", "bill_customer"."balance", "bill_customer"."guard_company_id", "bill_customer"."enable_monitoring_service" FROM "bill_customer" INNER JOIN "auth_user" ON ("bill_customer"."id" = "auth_user"."id") WHERE "bill_customer"."id" = 1 ORDER BY "auth_user"."username" ASC LIMIT 1',
      'INSERT INTO "guard_case" ("incident_id", "event_id", "inspection_id", "operator_id", "guard_id", "robot_id", "customer_id", "created_at", "updated_at", "viewed", "status", "action", "report", "priority", "type") VALUES (NULL, 12, NULL, NULL, NULL, NULL, 1, \'2020-02-26T03:10:24.024964+00:00\'::timestamptz, \'2020-02-26T03:10:24.024990+00:00\'::timestamptz, false, \'new\', \'new\', NULL, \'unassigned\', \'event\') RETURNING "guard_case"."id"',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
      'SELECT "guard_monitoringoperator"."id", "guard_monitoringoperator"."organization_id", "guard_monitoringoperator"."created_at", "guard_monitoringoperator"."updated_at", "guard_monitoringoperator"."phone_number", "guard_monitoringoperator"."phone_number_verified" FROM "guard_monitoringoperator" WHERE "guard_monitoringoperator"."organization_id" = 1 ORDER BY "guard_monitoringoperator"."id" ASC LIMIT 1',
      'UPDATE "guard_case" SET "operator_id" = 22 WHERE "guard_case"."id" = 12',
      'INSERT INTO "guard_casehistory" ("case_id", "created_at", "updated_at", "user_id", "robot_id", "data", "action") VALUES (12, \'2020-02-26T03:10:24.060990+00:00\'::timestamptz, \'2020-02-26T03:10:24.061017+00:00\'::timestamptz, 1, NULL, \'{}\', \'new\') RETURNING "guard_casehistory"."id"'
    ],
    'errors': [
      {
        'sql': 'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 4
      },
      {
        'sql': 'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'box\' AND "algorithm_producttype"."type" = \'test_lee\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 4
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/authenticate',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'21001bczbwmua80lx93wbnoabxi0i74q\' AND "django_session"."expire_date" > \'2020-02-26T03:10:24.662261+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE "logic_robot"."id" = \'robot_dog_sr_20002\'',
      'UPDATE "logic_robot" SET "updated_at" = \'2020-02-26T03:10:24.697624+00:00\'::timestamptz, "meta" = \'{"agent":{"name":"Robot","level":1,"version":"0.14.3"},"app_agent":{"name":"Bot_Nimbo","level":1403,"version":"0.14.3"}}\', "ip_address" = \'192.168.0.133\'::inet, "type" = \'test_li\', "cameras" = \'[{"name":"front"},{"name":"rear"}]\', "version" = 1603 WHERE "logic_robot"."id" = \'robot_dog_sr_20002\'',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/event/events/robot',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'21001bczbwmua80lx93wbnoabxi0i74q\' AND "django_session"."expire_date" > \'2020-02-26T03:10:24.860786+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone", "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_robot" LEFT OUTER JOIN "auth_user" ON ("logic_robot"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") WHERE "logic_robot"."id" = \'robot_dog_sr_20002\' ORDER BY "logic_robot"."id" ASC LIMIT 1',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."type", "logic_robot"."name", "logic_robot"."mac_params", "logic_robot"."notifies", "logic_robot"."site_id", "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone", "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version", "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_robot" LEFT OUTER JOIN "auth_user" ON ("logic_robot"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_monitor" ON ("auth_user"."id" = "logic_monitor"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") LEFT OUTER JOIN "logic_site" ON ("logic_robot"."site_id" = "logic_site"."id") WHERE "logic_robot"."id" = \'robot_dog_sr_20002\'',
      'INSERT INTO "logic_event" ("created_at", "updated_at", "source", "robot_id", "robot_camera", "camera_id", "site_id", "location", "types", "types_bits", "started_at", "ended_at", "data", "marked", "viewed", "annotate", "tag") VALUES (\'2020-02-26T03:10:24.990245+00:00\'::timestamptz, \'2020-02-26T03:10:24.990278+00:00\'::timestamptz, \'robot\', \'robot_dog_sr_20002\', \'front\', NULL, 1, \'{"lat":0.0,"lng":0.0}\', \'person:514,entertimestamptz, \'2019-10-14T06:01:57.262076+00:00\'::timestamptz, \'{"camera":"front","threshold":0.9,"detected_macs":[]}\', false, false, \'unknown\', \'\') RETURNING "logic_event"."id"',
      'INSERT INTO "logic_medium" ("created_at", "updated_at", "event_id", "name", "file", "data") VALUES (\'2020-02-26T03:10:24.991822+00:00\'::timestamptz, \'2020-02-26T03:10:24.991851+00:00\'::timestamptz, 13, \'snapshot\', \'{"Key":"users/1/cameras/1/events/logo.jpg","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"size":[640,360],"content_type":"image/jpeg"}}\', \'{}\'), (\'2020-02-26T03:10:24.991965+00:00\'::timestamptz, \'2020-02-26T03:10:24.991988+00:00\'::timestamptz, 13, \'bbox\', \'{"Key":"users/3/cameras/3/events/0dc87e3","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"size":[640,360],"content_type":"text/json"}}\', \'{}\'), (\'2020-02-26T03:10:24.992085+00:00\'::timestamptz, \'2020-02-26T03:10:24.992107+00:00\'::timestamptz, 13, \'video\', \'{"Key":"users/3/cameras/3/events/0dc87e3","Bucket":"develop-data-turingvideo-com","meta":{"file_size":1888,"content_type":"video/mp4"}}\', \'{"started_at":"2019-10-14T06:00:57.262Z","ended_at":"2019-10-14T06:02:57.262Z"}\') RETURNING "logic_medium"."id"',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:10:24.993044+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "event_version" = ("logic_monitor"."event_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "bill_customer"."created_at", "bill_customer"."updated_at", "bill_customer"."id", "bill_customer"."stripe_id", "bill_customer"."status", "bill_customer"."balance", "bill_customer"."guard_company_id", "bill_customer"."enable_monitoring_service" FROM "bill_customer" INNER JOIN "auth_user" ON ("bill_customer"."id" = "auth_user"."id") WHERE "bill_customer"."id" = 1 ORDER BY "auth_user"."username" ASC LIMIT 1',
      'INSERT INTO "guard_case" ("incident_id", "event_id", "inspection_id", "operator_id", "guard_id", "robot_id", "customer_id", "created_at", "updated_at", "viewed", "status", "action", "report", "priority", "type") VALUES (NULL, 13, NULL, NULL, NULL, NULL, 1, \'2020-02-26T03:10:25.027383+00:00\'::timestamptz, \'2020-02-26T03:10:25.027423+00:00\'::timestamptz, false, \'new\', \'new\', NULL, \'unassigned\', \'event\') RETURNING "guard_case"."id"',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
      'SELECT "guard_monitoringoperator"."id", "guard_monitoringoperator"."organization_id", "guard_monitoringoperator"."created_at", "guard_monitoringoperator"."updated_at", "guard_monitoringoperator"."phone_number", "guard_monitoringoperator"."phone_number_verified" FROM "guard_monitoringoperator" WHERE "guard_monitoringoperator"."organization_id" = 1 ORDER BY "guard_monitoringoperator"."id" ASC LIMIT 1',
      'UPDATE "guard_case" SET "operator_id" = 22 WHERE "guard_case"."id" = 13',
      'INSERT INTO "guard_casehistory" ("case_id", "created_at", "updated_at", "user_id", "robot_id", "data", "action") VALUES (13, \'2020-02-26T03:10:25.080083+00:00\'::timestamptz, \'2020-02-26T03:10:25.080116+00:00\'::timestamptz, 1, NULL, \'{}\', \'new\') RETURNING "guard_casehistory"."id"'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype" INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 4
      },
      {
        'sql': 'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."created_at", "logic_customizedeventtype"."updated_at", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."customized_algorithm_id", "logic_customizedeventtype"."event_type_id", "logic_customizedeventtype"."index", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" INNER JOIN "algorithm_eventtype" ON ("logic_customizedeventtype"."event_type_id" = "algorithm_eventtype"."id") INNER JOIN "algorithm_algorithm" ON ("algorithm_eventtype"."algorithm_id" = "algorithm_algorithm"."id") INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") WHERE ("logic_customizedeventtype"."organization_id" = 5 AND "algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 4
      }
    ]
  },
  {
    'url': '/api/v1/event/events/90',
    'type': 'DELETE',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'k44e3zcxtidxmbs95k4ryxcwb1f3h3ub\' AND "django_session"."expire_date" > \'2020-02-26T03:10:28.365588+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") WHERE "logic_event"."id" = 90',
      'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (90)',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'destroy\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = logic_event.id) AND "logic_event"."id" = 90) ORDER BY "logic_event"."started_at" DESC',
      'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (90)',
      'SELECT "guard_case"."id", "guard_case"."incident_id", "guard_case"."event_id", "guard_case"."inspection_id", "guard_case"."operator_id", "guard_case"."guard_id", "guard_case"."robot_id", "guard_case"."customer_id", "guard_case"."created_at", "guard_case"."updated_at", "guard_case"."viewed", "guard_case"."status", "guard_case"."action", "guard_case"."report", "guard_case"."priority", "guard_case"."type" FROM "guard_case" WHERE "guard_case"."event_id" IN (90)',
      'DELETE FROM "logic_medium" WHERE "logic_medium"."event_id" IN (90)',
      'DELETE FROM "guard_note" WHERE "guard_note"."case_id" IN (141)',
      'DELETE FROM "guard_casemedium" WHERE "guard_casemedium"."case_id" IN (141)',
      'DELETE FROM "guard_casehistory" WHERE "guard_casehistory"."case_id" IN (141)',
      'DELETE FROM "logic_event" WHERE "logic_event"."id" IN (90)',
      'DELETE FROM "guard_case" WHERE "guard_case"."id" IN (141)'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (90)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/event/events/all',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'nxmqm2a3mcnueyhvv83vkb5nc1vses0f\' AND "django_session"."expire_date" > \'2020-02-26T03:10:33.248442+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_organization" INNER JOIN "org_organizationuser" ON ("logic_organization"."id" = "org_organizationuser"."organization_id") WHERE "org_organizationuser"."user_id" = 1',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
      'SELECT "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") WHERE position(B\'1\' IN "logic_event"."types_bits" & X\'alogic_event"."started_at" DESC LIMIT 31',
      'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (81, 83, 12, 92)',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
      'SELECT "logic_event"."id", "logic_event"."robot_id", "logic_event"."camera_id", "logic_robot"."id", "logic_robot"."user_id", "auth_user"."id", "logic_organization"."id", "logic_camera"."id", "logic_camera"."user_id", T6."id", T7."id" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "auth_user" ON ("logic_robot"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "auth_user" T6 ON ("logic_camera"."user_id" = T6."id") LEFT OUTER JOIN "logic_organization" T7 ON (T6."id" = T7."owner_id") WHERE "logic_event"."id" IN (81, 83, 12, 92)',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" WHERE "logic_customizedeventtype"."organization_id" IN (5)'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/event/events',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'pn6xm9471ym3d5opqf4qc4b7h1z8229l\' AND "django_session"."expire_date" > \'2020-02-26T03:10:37.601967+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'SELECT "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_organization" INNER JOIN "org_organizationuser" ON ("logic_organization"."id" = "org_organizationuser"."organization_id") WHERE "org_organizationuser"."user_id" = 1',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = logic_event.id) AND position(B\'1\' IN "logic_event"."types_bits" & X\'alogic_event"."started_at" DESC LIMIT 31',
      'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (81, 83, 12, 92)',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
      'SELECT "logic_event"."id", "logic_event"."robot_id", "logic_event"."camera_id", "logic_robot"."id", "logic_robot"."user_id", "auth_user"."id", "logic_organization"."id", "logic_camera"."id", "logic_camera"."user_id", T6."id", T7."id" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "auth_user" ON ("logic_robot"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "auth_user" T6 ON ("logic_camera"."user_id" = T6."id") LEFT OUTER JOIN "logic_organization" T7 ON (T6."id" = T7."owner_id") WHERE "logic_event"."id" IN (81, 83, 12, 92)',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" WHERE "logic_customizedeventtype"."organization_id" IN (5)'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/inspection/inspections',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'ftxdk91764vtsbrqi0r2ho7e1p1g621q\' AND "django_session"."expire_date" > \'2020-02-26T03:10:40.760279+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.inspection\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 20',
      'SELECT COUNT(*) FROM (SELECT (t._actions) AS "_actions", "logic_inspection"."id" AS Col1, ("logic_inspection"."way_point" ->> \'name\') AS "store_name", ("logic_inspection"."way_point" ->> \'map_id\') AS "map_id", ("logic_inspection"."way_point" ->> \'route_id\') AS "route_id" FROM "logic_inspection" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_inspection"."id", (select \'create,retrieve,update,token\') AS "_actions" FROM "logic_inspection" INNER JOIN "logic_robot" ON ("logic_inspection"."robot_id" = "logic_robot"."id") WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE (t.id = logic_inspection.id) GROUP BY "logic_inspection"."id", (t._actions), ("logic_inspection"."way_point" ->> \'name\'), ("logic_inspection"."way_point" ->> \'map_id\'), ("logic_inspection"."way_point" ->> \'route_id\')) subquery',
      'SELECT (t._actions) AS "_actions", "logic_inspection"."created_at", "logic_inspection"."updated_at", "logic_inspection"."id", "logic_inspection"."robot_id", "logic_inspection"."camera", "logic_inspection"."started_at", "logic_inspection"."ended_at", "logic_inspection"."location", "logic_inspection"."way_point", "logic_inspection"."way_point_id", "logic_inspection"."type", "logic_inspection"."algo_types", ("logic_inspection"."way_point" ->> \'name\') AS "store_name", ("logic_inspection"."way_point" ->> \'map_id\') AS "map_id", ("logic_inspection"."way_point" ->> \'route_id\') AS "route_id", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_inspection" INNER JOIN "logic_robot" ON ("logic_inspection"."robot_id" = "logic_robot"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_inspection"."id", (select \'create,retrieve,update,token\') AS "_actions" FROM "logic_inspection" INNER JOIN "logic_robot" ON ("logic_inspection"."robot_id" = "logic_robot"."id") WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE (t.id = logic_inspection.id) ORDER BY "logic_inspection"."ended_at" DESC, "store_name" ASC LIMIT 10',
      'SELECT "logic_inspectmedium"."created_at", "logic_inspectmedium"."updated_at", "logic_inspectmedium"."id", "logic_inspectmedium"."inspection_id", "logic_inspectmedium"."name", "logic_inspectmedium"."file", "logic_inspectmedium"."data" FROM "logic_inspectmedium" WHERE "logic_inspectmedium"."inspection_id" IN (184, 183)',
      'SELECT "guard_case"."id", "guard_case"."incident_id", "guard_case"."event_id", "guard_case"."inspection_id", "guard_case"."operator_id", "guard_case"."guard_id", "guard_case"."robot_id", "guard_case"."customer_id", "guard_case"."created_at", "guard_case"."updated_at", "guard_case"."viewed", "guard_case"."status", "guard_case"."action", "guard_case"."report", "guard_case"."priority", "guard_case"."type" FROM "guard_case" WHERE "guard_case"."inspection_id" = 184',
      'SELECT "guard_case"."id", "guard_case"."incident_id", "guard_case"."event_id", "guard_case"."inspection_id", "guard_case"."operator_id", "guard_case"."guard_id", "guard_case"."robot_id", "guard_case"."customer_id", "guard_case"."created_at", "guard_case"."updated_at", "guard_case"."viewed", "guard_case"."status", "guard_case"."action", "guard_case"."report", "guard_case"."priority", "guard_case"."type" FROM "guard_case" WHERE "guard_case"."inspection_id" = 183'
    ],
    'warning': [
      {
        'prefix': "select guard_case [] ['guard_case.inspection_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/event/events/82',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'ko25mdr26a5c0ck8f7whw4lz4xj8me32\' AND "django_session"."expire_date" > \'2020-02-26T03:10:42.969476+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") WHERE "logic_event"."id" = 82',
      'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (82)',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = logic_event.id) AND "logic_event"."id" = 82) ORDER BY "logic_event"."started_at" DESC',
      'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (82)',
      'SELECT "algorithm_eventtype"."id", "algorithm_eventtype"."created_at", "algorithm_eventtype"."updated_at", "algorithm_eventtype"."algorithm_id", "algorithm_eventtype"."code_name", "algorithm_eventtype"."name", "algorithm_eventtype"."name_en", "algorithm_eventtype"."name_zh_hans", "algorithm_eventtype"."index" FROM "algorithm_eventtype"',
      'SELECT "logic_event"."id", "logic_event"."robot_id", "logic_event"."camera_id", "logic_robot"."id", "logic_robot"."user_id", "auth_user"."id", "logic_organization"."id", "logic_camera"."id", "logic_camera"."user_id", T6."id", T7."id" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "auth_user" ON ("logic_robot"."user_id" = "auth_user"."id") LEFT OUTER JOIN "logic_organization" ON ("auth_user"."id" = "logic_organization"."owner_id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "auth_user" T6 ON ("logic_camera"."user_id" = T6."id") LEFT OUTER JOIN "logic_organization" T7 ON (T6."id" = T7."owner_id") WHERE "logic_event"."id" IN (82)',
      'SELECT "logic_customizedeventtype"."id", "logic_customizedeventtype"."organization_id", "logic_customizedeventtype"."code_name", "logic_customizedeventtype"."name" FROM "logic_customizedeventtype" WHERE "logic_customizedeventtype"."organization_id" IN (5)'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_medium"."created_at", "logic_medium"."updated_at", "logic_medium"."id", "logic_medium"."event_id", "logic_medium"."name", "logic_medium"."file", "logic_medium"."data" FROM "logic_medium" WHERE "logic_medium"."event_id" IN (82)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/inspection/inspections/183',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'eycux9mxvmtz6n5wtfjo09n20nruyx1i\' AND "django_session"."expire_date" > \'2020-02-26T03:10:43.435593+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_inspection"."created_at", "logic_inspection"."updated_at", "logic_inspection"."id", "logic_inspection"."robot_id", "logic_inspection"."camera", "logic_inspection"."started_at", "logic_inspection"."ended_at", "logic_inspection"."location", "logic_inspection"."way_point", "logic_inspection"."way_point_id", "logic_inspection"."type", "logic_inspection"."algo_types", ("logic_inspection"."way_point" ->> \'name\') AS "store_name", ("logic_inspection"."way_point" ->> \'map_id\') AS "map_id", ("logic_inspection"."way_point" ->> \'route_id\') AS "route_id", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_inspection" INNER JOIN "logic_robot" ON ("logic_inspection"."robot_id" = "logic_robot"."id") WHERE "logic_inspection"."id" = 183',
      'SELECT "logic_inspectmedium"."created_at", "logic_inspectmedium"."updated_at", "logic_inspectmedium"."id", "logic_inspectmedium"."inspection_id", "logic_inspectmedium"."name", "logic_inspectmedium"."file", "logic_inspectmedium"."data" FROM "logic_inspectmedium" WHERE "logic_inspectmedium"."inspection_id" IN (183)',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.inspection\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 20',
      'SELECT (t._actions) AS "_actions", "logic_inspection"."created_at", "logic_inspection"."updated_at", "logic_inspection"."id", "logic_inspection"."robot_id", "logic_inspection"."camera", "logic_inspection"."started_at", "logic_inspection"."ended_at", "logic_inspection"."location", "logic_inspection"."way_point", "logic_inspection"."way_point_id", "logic_inspection"."type", "logic_inspection"."algo_types", ("logic_inspection"."way_point" ->> \'name\') AS "store_name", ("logic_inspection"."way_point" ->> \'map_id\') AS "map_id", ("logic_inspection"."way_point" ->> \'route_id\') AS "route_id", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_inspection" INNER JOIN "logic_robot" ON ("logic_inspection"."robot_id" = "logic_robot"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_inspection"."id", (select \'create,retrieve,update,token\') AS "_actions" FROM "logic_inspection" INNER JOIN "logic_robot" ON ("logic_inspection"."robot_id" = "logic_robot"."id") WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_inspection.id) AND "logic_inspection"."id" = 183)',
      'SELECT "logic_inspectmedium"."created_at", "logic_inspectmedium"."updated_at", "logic_inspectmedium"."id", "logic_inspectmedium"."inspection_id", "logic_inspectmedium"."name", "logic_inspectmedium"."file", "logic_inspectmedium"."data" FROM "logic_inspectmedium" WHERE "logic_inspectmedium"."inspection_id" IN (183)',
      'SELECT "guard_case"."id", "guard_case"."incident_id", "guard_case"."event_id", "guard_case"."inspection_id", "guard_case"."operator_id", "guard_case"."guard_id", "guard_case"."robot_id", "guard_case"."customer_id", "guard_case"."created_at", "guard_case"."updated_at", "guard_case"."viewed", "guard_case"."status", "guard_case"."action", "guard_case"."report", "guard_case"."priority", "guard_case"."type" FROM "guard_case" WHERE "guard_case"."inspection_id" = 183'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_inspectmedium"."created_at", "logic_inspectmedium"."updated_at", "logic_inspectmedium"."id", "logic_inspectmedium"."inspection_id", "logic_inspectmedium"."name", "logic_inspectmedium"."file", "logic_inspectmedium"."data" FROM "logic_inspectmedium" WHERE "logic_inspectmedium"."inspection_id" IN (183)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/robot/robot_dog_sr_20002/patrols',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'rm44outmxc35ir54fx8a2scr1d9pj395\' AND "django_session"."expire_date" > \'2020-02-26T03:10:44.622331+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.patrol\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'create\']::varchar(127)[]) AND "perm_role"."code_name" IN (\'customer\'))',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1 LIMIT 1',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE ("logic_robot"."id" = \'robot_dog_sr_20002\' AND "logic_robot"."user_id" = 1) FOR UPDATE',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE ("logic_route"."id" = 33 AND "logic_route"."user_id" = 1) FOR UPDATE',
      'SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = \'logic\' AND "django_content_type"."model" = \'patrol\')',
      'INSERT INTO "logic_task" ("polymorphic_ctype_id", "created_at", "updated_at", "robot_id", "type", "name", "mode", "start_at", "end_at", "version") VALUES (46, \'2020-02-26T03:10:44.643257+00:00\'::timestamptz, \'2020-02-26T03:10:44.643288+00:00\'::timestamptz, \'robot_dog_sr_20002\', \'patrol\', \'route_test\', \'on\', 12, 36, 0) RETURNING "logic_task"."id"',
      'INSERT INTO "logic_patrol" ("task_id", "route_id") VALUES (12, 33)',
      'UPDATE "logic_robot" SET "updated_at" = \'2020-02-26T03:10:44.644956+00:00\'::timestamptz, "sequence" = 8, "version" = 1604 WHERE "logic_robot"."id" = \'robot_dog_sr_20002\'',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:10:44.646025+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "robot_version" = ("logic_monitor"."robot_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" = \'robot_dog_sr_20002\'',
      'SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = \'logic\' AND "django_content_type"."model" = \'task\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version", "logic_patrol"."task_id", "logic_patrol"."route_id" FROM "logic_patrol" INNER JOIN "logic_task" ON ("logic_patrol"."task_id" = "logic_task"."id") WHERE "logic_patrol"."task_id" IN (1, 12)',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."id" IN (33)'
    ],
    'warning': [
      {
        'prefix': "select django_content_type [] ['django_content_type.app_label.=', 'django_content_type.model.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'hkscirhcwyh6xkhd921gi0wjir4hlti7\' AND "django_session"."expire_date" > \'2020-02-26T03:11:03.805088+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.robot\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 11',
      'SELECT COUNT(*) AS "__count" FROM "logic_robot" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_robot"."id", (select \'retrieve,update,claim,unclaim,meta,event_types,save_video,view_robot,present_to_robot,investigate,switch_mode,comm_play,move,stream,map_upload,play_sound,setup,search_macs,go_home,leave_home,download_map,reset_slam,micro_move\') AS "_actions" FROM "logic_robot" WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE (t.id = logic_robot.id)',
      'SELECT (t._actions) AS "_actions", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_robot"."id", (select \'retrieve,update,claim,unclaim,meta,event_types,save_video,view_robot,present_to_robot,investigate,switch_mode,comm_play,move,stream,map_upload,play_sound,setup,search_macs,go_home,leave_home,download_map,reset_slam,micro_move\') AS "_actions" FROM "logic_robot" WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE (t.id = logic_robot.id) LIMIT 10',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" IN (\'robot_dog_sr_20003\', \'robot_dog_sr_20002\', \'robot_dog_sr_20004\', \'robot_dog_sr_20001\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version", "logic_patrol"."task_id", "logic_patrol"."route_id" FROM "logic_patrol" INNER JOIN "logic_task" ON ("logic_patrol"."task_id" = "logic_task"."id") WHERE "logic_patrol"."task_id" IN (1, 12)',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."id" IN (33)',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 4
      },
      {
        'sql': 'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 8
      },
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 8
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/robot_dog_sr_20002',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'pv6pif3m9rcrbwy934xolh2071n1ok6t\' AND "django_session"."expire_date" > \'2020-02-26T03:11:10.031372+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE "logic_robot"."id" = \'robot_dog_sr_20002\'',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" IN (\'robot_dog_sr_20002\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version", "logic_patrol"."task_id", "logic_patrol"."route_id" FROM "logic_patrol" INNER JOIN "logic_task" ON ("logic_patrol"."task_id" = "logic_task"."id") WHERE "logic_patrol"."task_id" IN (1, 12)',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."id" IN (33)',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.robot\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 11',
      'SELECT (t._actions) AS "_actions", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_robot"."id", (select \'retrieve,update,claim,unclaim,meta,event_types,save_video,view_robot,present_to_robot,investigate,switch_mode,comm_play,move,stream,map_upload,play_sound,setup,search_macs,go_home,leave_home,download_map,reset_slam,micro_move\') AS "_actions" FROM "logic_robot" WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE ((t.id = logic_robot.id) AND "logic_robot"."id" = \'robot_dog_sr_20002\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" IN (\'robot_dog_sr_20002\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version", "logic_patrol"."task_id", "logic_patrol"."route_id" FROM "logic_patrol" INNER JOIN "logic_task" ON ("logic_patrol"."task_id" = "logic_task"."id") WHERE "logic_patrol"."task_id" IN (1, 12)',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."id" IN (33)',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version", "logic_patrol"."task_id", "logic_patrol"."route_id" FROM "logic_patrol" INNER JOIN "logic_task" ON ("logic_patrol"."task_id" = "logic_task"."id") WHERE "logic_patrol"."task_id" IN (1, 12)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" IN (\'robot_dog_sr_20002\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."id" IN (33)',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/authenticate',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'mb71e0jtbzlvb5v9g64wk3j1xj8qrib8\' AND "django_session"."expire_date" > \'2020-02-26T03:11:14.544053+00:00\'::timestamptz)',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1'
    ],
    'errors': [
      {
        'sql': 'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/debug_login',
    'type': 'POST',
    'all_sql': [
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT "logic_devicekey"."created_at", "logic_devicekey"."updated_at", "logic_devicekey"."id", "logic_devicekey"."signature", "logic_devicekey"."public_key" FROM "logic_devicekey" WHERE "logic_devicekey"."id" = \'robot_dog_sr_20002\'',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE "logic_robot"."id" = \'robot_dog_sr_20002\'',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/debug_login',
    'type': 'POST',
    'all_sql': [
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT "logic_devicekey"."created_at", "logic_devicekey"."updated_at", "logic_devicekey"."id", "logic_devicekey"."signature", "logic_devicekey"."public_key" FROM "logic_devicekey" WHERE "logic_devicekey"."id" = \'err_id_err001\''
    ],
    'errors': [
      {
        'sql': 'SELECT (1) AS "a" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/differences',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'tlwwo9dzaarexe91suaqv66orji8ii5a\' AND "django_session"."expire_date" > \'2020-02-26T03:11:16.899167+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.robot\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1 ORDER BY "auth_user"."id" ASC LIMIT 1',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 11',
      'SELECT (t._actions) AS "_actions", "logic_robot"."id", "logic_robot"."version" FROM "logic_robot" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_robot"."id", (select \'retrieve,update,claim,unclaim,meta,event_types,save_video,view_robot,present_to_robot,investigate,switch_mode,comm_play,move,stream,map_upload,play_sound,setup,search_macs,go_home,leave_home,download_map,reset_slam,micro_move\') AS "_actions" FROM "logic_robot" WHERE "logic_robot"."user_id" = 1) as t group by id) as t WHERE (t.id = logic_robot.id)',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE "logic_robot"."id" IN (\'robot_dog_sr_20003\', \'robot_dog_sr_20002\', \'robot_dog_sr_20004\', \'robot_dog_sr_20001\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" IN (\'robot_dog_sr_20003\', \'robot_dog_sr_20002\', \'robot_dog_sr_20004\', \'robot_dog_sr_20001\')',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version", "logic_patrol"."task_id", "logic_patrol"."route_id" FROM "logic_patrol" INNER JOIN "logic_task" ON ("logic_patrol"."task_id" = "logic_task"."id") WHERE "logic_patrol"."task_id" IN (1, 12)',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."id" IN (33)',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 4
      },
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 8
      },
      {
        'sql': 'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 8
      }
    ]
  },
  {
    'url': '/api/v1/robot/robots/claim',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'w3j5u7xpt5chhdv1yz6teqpubj0es64n\' AND "django_session"."expire_date" > \'2020-02-26T03:11:31.559576+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.robot\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'claim\']::varchar(127)[]) AND "perm_role"."code_name" IN (\'customer\'))',
      'SELECT "logic_devicekey"."created_at", "logic_devicekey"."updated_at", "logic_devicekey"."id", "logic_devicekey"."signature", "logic_devicekey"."public_key" FROM "logic_devicekey" WHERE "logic_devicekey"."id" = \'robot_dog_sr_20003\'',
      'SELECT "logic_monitor"."created_at", "logic_monitor"."updated_at", "logic_monitor"."id", "logic_monitor"."version", "logic_monitor"."box_version", "logic_monitor"."robot_version", "logic_monitor"."camera_version", "logic_monitor"."event_version", "logic_monitor"."route_version" FROM "logic_monitor" WHERE "logic_monitor"."id" = 1 LIMIT 1',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE "logic_robot"."id" = \'robot_dog_sr_20003\' FOR UPDATE',
      'UPDATE "logic_robot" SET "updated_at" = \'2020-02-26T03:11:31.629315+00:00\'::timestamptz, "user_id" = 1, "timezone" = \'Asia/Shanghai\', "sequence" = ("logic_robot"."sequence" + 1), "version" = ("logic_robot"."version" + 1) WHERE "logic_robot"."id" = \'robot_dog_sr_20003\'',
      'UPDATE "logic_monitor" SET "updated_at" = \'2020-02-26T03:11:31.632173+00:00\'::timestamptz, "version" = ("logic_monitor"."version" + 1), "robot_version" = ("logic_monitor"."robot_version" + 1) WHERE "logic_monitor"."id" = 1',
      'SELECT "logic_task"."polymorphic_ctype_id", "logic_task"."created_at", "logic_task"."updated_at", "logic_task"."id", "logic_task"."robot_id", "logic_task"."type", "logic_task"."name", "logic_task"."mode", "logic_task"."start_at", "logic_task"."end_at", "logic_task"."version" FROM "logic_task" WHERE "logic_task"."robot_id" = \'robot_dog_sr_20003\'',
      'SELECT "algorithm_producttype"."id", "algorithm_producttype"."created_at", "algorithm_producttype"."updated_at", "algorithm_producttype"."category", "algorithm_producttype"."type", "algorithm_producttype"."meta" FROM "algorithm_producttype" WHERE ("algorithm_producttype"."category" = \'robot\' AND "algorithm_producttype"."type" = \'test_li\') ORDER BY "algorithm_producttype"."id" ASC LIMIT 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
      'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
      'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1'
    ],
    'errors': [
      {
        'sql': 'SELECT "logic_customizedalgorithm"."id", "logic_customizedalgorithm"."algorithm_id", "logic_customizedalgorithm"."index", "logic_customizedalgorithm"."code_name", "logic_customizedalgorithm"."name", "algorithm_algorithm"."id", "algorithm_algorithm"."code_name" FROM "logic_customizedalgorithm" INNER JOIN "logic_organization" ON ("logic_customizedalgorithm"."organization_id" = "logic_organization"."id") INNER JOIN "algorithm_algorithm" ON ("logic_customizedalgorithm"."algorithm_id" = "algorithm_algorithm"."id") WHERE "logic_organization"."owner_id" = 1',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT DISTINCT ON ("algorithm_algorithm"."id") "algorithm_algorithm"."id", "algorithm_algorithm"."created_at", "algorithm_algorithm"."updated_at", "algorithm_algorithm"."code_name", "algorithm_algorithm"."name", "algorithm_algorithm"."name_en", "algorithm_algorithm"."name_zh_hans", "algorithm_algorithm"."intro", "algorithm_algorithm"."index" FROM "algorithm_algorithm" INNER JOIN "algorithm_productalgorithm" ON ("algorithm_algorithm"."id" = "algorithm_productalgorithm"."algorithm_id") INNER JOIN "algorithm_producttype" ON ("algorithm_productalgorithm"."product_type_id" = "algorithm_producttype"."id") INNER JOIN "algorithm_productalgorithm" T4 ON ("algorithm_algorithm"."id" = T4."algorithm_id") INNER JOIN "algorithm_producttype" T5 ON (T4."product_type_id" = T5."id") WHERE ("algorithm_producttype"."category" = \'robot\' AND T5."type" = \'test_li\')',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/event/events/updates',
    'type': 'PATCH',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'fu4d2dx99817mczwlqjhghqlnx9l0m8e\' AND "django_session"."expire_date" > \'2020-02-26T03:11:59.009362+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1 ORDER BY "auth_user"."id" ASC LIMIT 1',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'UPDATE "logic_event" SET "tag" = \'false\', "marked" = false, "viewed" = false WHERE "logic_event"."id" IN (SELECT U0."id" AS Col1 FROM "logic_event" U0 , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND U0."id" IN (1, 2)))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21'
    ],
    'errors': [
      {
        'sql': 'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2)) LIMIT 21',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 6
      }
    ]
  },
  {
    'url': '/api/v1/event/events/updates',
    'type': 'PATCH',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'qaty72pwtaltq71wctn7cjmyl1nf35c8\' AND "django_session"."expire_date" > \'2020-02-26T03:11:59.561184+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1 ORDER BY "auth_user"."id" ASC LIMIT 1',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'UPDATE "logic_event" SET "tag" = \'false\', "marked" = false, "viewed" = false WHERE "logic_event"."id" IN (SELECT U0."id" AS Col1 FROM "logic_event" U0 , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id)',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21'
    ],
    'errors': [
      {
        'sql': 'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE (t.id = U0.id) LIMIT 21',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 6
      }
    ]
  },
  {
    'url': '/api/v1/event/events/updates',
    'type': 'PATCH',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'1iluusbjhwf6h08ywixpjmwlldfyhvh4\' AND "django_session"."expire_date" > \'2020-02-26T03:12:00.678682+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1 ORDER BY "auth_user"."id" ASC LIMIT 1',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'UPDATE "logic_event" SET "tag" = \'false\', "marked" = false, "viewed" = false WHERE "logic_event"."id" IN (SELECT U0."id" AS Col1 FROM "logic_event" U0 , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND U0."id" IN (1, 2) AND U0."camera_id" IN (2)))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21'
    ],
    'errors': [
      {
        'sql': 'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."id" IN (1, 2) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 6
      }
    ]
  },
  {
    'url': '/api/v1/event/events/updates',
    'type': 'PATCH',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'xi07bopv8d6ub1g4mptjdou7audzxwc3\' AND "django_session"."expire_date" > \'2020-02-26T03:12:01.283112+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 1 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'logic.event\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1 ORDER BY "auth_user"."id" ASC LIMIT 1',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 12',
      'UPDATE "logic_event" SET "tag" = \'false\', "marked" = false, "viewed" = false WHERE "logic_event"."id" IN (SELECT U0."id" AS Col1 FROM "logic_event" U0 , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND U0."camera_id" IN (2)))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2))',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
      'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21'
    ],
    'errors': [
      {
        'sql': 'SELECT (t._actions) AS "_actions", "logic_event"."created_at", "logic_event"."updated_at", "logic_event"."id", "logic_event"."source", "logic_event"."robot_id", "logic_event"."robot_camera", "logic_event"."camera_id", "logic_event"."site_id", "logic_event"."location", "logic_event"."types", "logic_event"."types_bits", "logic_event"."started_at", "logic_event"."ended_at", "logic_event"."data", "logic_event"."marked", "logic_event"."viewed", "logic_event"."annotate", "logic_event"."tag", "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push", "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params", "logic_site"."created_at", "logic_site"."updated_at", "logic_site"."id", "logic_site"."customer_id", "logic_site"."name", "logic_site"."location", "logic_site"."note", "logic_site"."polygons" FROM "logic_event" INNER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_site" ON ("logic_event"."site_id" = "logic_site"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "logic_event"."id", (select \'retrieve,update,destroy,react\') AS "_actions" FROM "logic_event" LEFT OUTER JOIN "logic_robot" ON ("logic_event"."robot_id" = "logic_robot"."id") LEFT OUTER JOIN "logic_camera" ON ("logic_event"."camera_id" = "logic_camera"."id") WHERE ("logic_robot"."user_id" = 1 OR "logic_camera"."user_id" = 1)) as t group by id) as t WHERE ((t.id = U0.id) AND "logic_event"."camera_id" IN (2)) LIMIT 21',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 6
      }
    ]
  },
  {
    'url': '/api/v1/device/apns',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'ziafeivtwx5q2ta2j53yya4jmoadvpzz\' AND "django_session"."expire_date" > \'2020-02-26T03:12:02.534294+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "push_notifications_apnsdevice"."id", "push_notifications_apnsdevice"."name", "push_notifications_apnsdevice"."active", "push_notifications_apnsdevice"."user_id", "push_notifications_apnsdevice"."date_created", "push_notifications_apnsdevice"."application_id", "push_notifications_apnsdevice"."device_id", "push_notifications_apnsdevice"."registration_id" FROM "push_notifications_apnsdevice" WHERE "push_notifications_apnsdevice"."registration_id" = \'aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae\' ORDER BY "push_notifications_apnsdevice"."id" ASC LIMIT 1',
      'SELECT (1) AS "a" FROM "push_notifications_apnsdevice" WHERE ("push_notifications_apnsdevice"."registration_id" = \'aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae\' AND NOT ("push_notifications_apnsdevice"."id" = 12)) LIMIT 1',
      'UPDATE "push_notifications_apnsdevice" SET "name" = \'Apple iPhone 6s\', "active" = true, "user_id" = 1, "date_created" = \'2020-02-26T03:12:02.020136+00:00\'::timestamptz, "application_id" = NULL, "device_id" = \'ffffffff-ffff-ffff-ffff-ffffffffffff\'::uuid, "registration_id" = \'aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae\' WHERE "push_notifications_apnsdevice"."id" = 12',
      'UPDATE "push_notifications_apnsdevice" SET "name" = \'Apple iPhone 6s\', "active" = true, "user_id" = 1, "date_created" = \'2020-02-26T03:12:02.020136+00:00\'::timestamptz, "application_id" = NULL, "device_id" = \'ffffffff-ffff-ffff-ffff-ffffffffffff\'::uuid, "registration_id" = \'aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae\' WHERE "push_notifications_apnsdevice"."id" = 12'
    ],
    'errors': [
      {
        'sql': 'UPDATE "push_notifications_apnsdevice" SET "name" = \'Apple iPhone 6s\', "active" = true, "user_id" = 1, "date_created" = \'2020-02-26T03:12:02.020136+00:00\'::timestamptz, "application_id" = NULL, "device_id" = \'ffffffff-ffff-ffff-ffff-ffffffffffff\'::uuid, "registration_id" = \'aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae\' WHERE "push_notifications_apnsdevice"."id" = 12',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/device/gcm',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'5d60grjrm4a5vem51wf79gcmyuq66ha8\' AND "django_session"."expire_date" > \'2020-02-26T03:12:06.535308+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "push_notifications_gcmdevice"."id", "push_notifications_gcmdevice"."name", "push_notifications_gcmdevice"."active", "push_notifications_gcmdevice"."user_id", "push_notifications_gcmdevice"."date_created", "push_notifications_gcmdevice"."application_id", "push_notifications_gcmdevice"."device_id", "push_notifications_gcmdevice"."registration_id", "push_notifications_gcmdevice"."cloud_message_type" FROM "push_notifications_gcmdevice" WHERE "push_notifications_gcmdevice"."registration_id" = \'foobar\' ORDER BY "push_notifications_gcmdevice"."id" ASC LIMIT 1',
      'SELECT "push_notifications_gcmdevice"."id", "push_notifications_gcmdevice"."name", "push_notifications_gcmdevice"."active", "push_notifications_gcmdevice"."user_id", "push_notifications_gcmdevice"."date_created", "push_notifications_gcmdevice"."application_id", "push_notifications_gcmdevice"."device_id", "push_notifications_gcmdevice"."registration_id", "push_notifications_gcmdevice"."cloud_message_type" FROM "push_notifications_gcmdevice" WHERE ("push_notifications_gcmdevice"."registration_id" = \'foobar\' AND NOT ("push_notifications_gcmdevice"."id" = 12))',
      'UPDATE "push_notifications_gcmdevice" SET "name" = \'Galaxy Note 5\', "active" = true, "user_id" = 1, "date_created" = \'2020-02-26T03:12:06.030709+00:00\'::timestamptz, "application_id" = NULL, "device_id" = 271691579, "registration_id" = \'foobar\', "cloud_message_type" = \'FCM\' WHERE "push_notifications_gcmdevice"."id" = 12',
      'UPDATE "push_notifications_gcmdevice" SET "name" = \'Galaxy Note 5\', "active" = true, "user_id" = 1, "date_created" = \'2020-02-26T03:12:06.030709+00:00\'::timestamptz, "application_id" = NULL, "device_id" = 271691579, "registration_id" = \'foobar\', "cloud_message_type" = \'FCM\' WHERE "push_notifications_gcmdevice"."id" = 12'
    ],
    'errors': [
      {
        'sql': 'UPDATE "push_notifications_gcmdevice" SET "name" = \'Galaxy Note 5\', "active" = true, "user_id" = 1, "date_created" = \'2020-02-26T03:12:06.030709+00:00\'::timestamptz, "application_id" = NULL, "device_id" = 271691579, "registration_id" = \'foobar\', "cloud_message_type" = \'FCM\' WHERE "push_notifications_gcmdevice"."id" = 12',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/user_node/user_nodes',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'xpaslgnhmdl393onp2lrm61wlld6cp9o\' AND "django_session"."expire_date" > \'2020-02-26T03:12:35.776298+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT COUNT(*) AS "__count" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from ((SELECT "org_usernode"."id", (select \'create,update,destroy\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 5) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 3)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) UNION (SELECT "org_usernode"."id", (select \'retrieve\') AS "_actions" FROM "org_usernode" ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC)) as t group by id) as t WHERE (t.id = org_usernode.id)',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from ((SELECT "org_usernode"."id", (select \'create,update,destroy\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 5) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 3)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) UNION (SELECT "org_usernode"."id", (select \'retrieve\') AS "_actions" FROM "org_usernode" ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC)) as t group by id) as t WHERE (t.id = org_usernode.id) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC LIMIT 10',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 12',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 4',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 4',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 17',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 17',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 12',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 15',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 15',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 24',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 24'
    ],
    'errors': [
      {
        'sql': 'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 3
      },
      {
        'sql': 'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 12',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ],
    'warning': [
      {
        'prefix': "select perm_role ['perm_role_users'] ['perm_role_users.user_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 5
      },
      {
        'prefix': "select auth_user [] ['auth_user.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 5
      }
    ]
  },
  {
    'url': '/api/v1/user_node/user_nodes/3',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'3iv5zgwpn9j8r0bzijem8130b9r0fv9x\' AND "django_session"."expire_date" > \'2020-02-26T03:12:36.503479+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."id" = 3',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from ((SELECT "org_usernode"."id", (select \'create,update,destroy\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 5) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 3)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) UNION (SELECT "org_usernode"."id", (select \'retrieve\') AS "_actions" FROM "org_usernode" ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC)) as t group by id) as t WHERE ((t.id = org_usernode.id) AND "org_usernode"."id" = 3) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 12'
    ],
    'errors': [
      {
        'sql': 'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ]
  },
  {
    'url': '/api/v1/user_node/user_nodes/4',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'y72mild4ib54zath6f5sexk88eakf9p9\' AND "django_session"."expire_date" > \'2020-02-26T03:12:37.011681+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."id" = 4',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'retrieve\',\'update\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from ((SELECT "org_usernode"."id", (select \'create,update,destroy\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 5) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 3)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) UNION (SELECT "org_usernode"."id", (select \'retrieve\') AS "_actions" FROM "org_usernode" ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC)) as t group by id) as t WHERE ((t.id = org_usernode.id) AND "org_usernode"."id" = 4) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 4',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 4'
    ],
    'warning': [
      {
        'prefix': "select auth_user [] ['auth_user.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/user_node/user_nodes/create_user_roles',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'3h9bipltajvo1w91c8fpexznv6abfcyr\' AND "django_session"."expire_date" > \'2020-02-26T03:12:37.659307+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" @> ARRAY[\'create\']::varchar(127)[]))',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'assign_child\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "org_usernode"."id", (select \'assign_child\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 1 AND "org_usernode"."lft" <= 6) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 1 AND "org_usernode"."lft" <= 4)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) as t group by id) as t WHERE ((t.id = org_usernode.id) AND "org_usernode"."id" = 3) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."username" = \'test@turingvideo.com\' LIMIT 1',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'perm.role\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'attach_user\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 1',
      'SELECT (t._actions) AS "_actions", "perm_role"."id" FROM "perm_role" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "perm_role"."id", (select \'attach_user,retrieve\') AS "_actions" FROM "perm_role") as t group by id) as t WHERE (t.id = perm_role.id)',
      'SELECT "logic_organization"."id" FROM "logic_organization" INNER JOIN "org_organizationuser" ON ("logic_organization"."id" = "org_organizationuser"."organization_id") WHERE "org_organizationuser"."user_id" = 12 FOR UPDATE',
      'INSERT INTO "auth_user" ("password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username", "updated_at", "role", "lang", "nonce", "timezone") VALUES (\'!9WE7ieGdfjpBDk9Qv7DTtOyhyv3GHj5dvDaz9SDs\', NULL, false, \'test\', \'lee\', \'test@turingvideo.com\', false, true, \'2020-02-26T03:12:37.743284+00:00\'::timestamptz, \'test@turingvideo.com\', \'2020-02-26T03:12:37.744178+00:00\'::timestamptz, \'\', \'en\', \'3aI9Im6PGznAznw5lu6QTrHG8ITzJuMz5vVkbNJU\', \'UTC\') RETURNING "auth_user"."id"',
      'SELECT "perm_role"."id" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 25',
      'SELECT "perm_role_users"."role_id" FROM "perm_role_users" WHERE ("perm_role_users"."user_id" = 25 AND "perm_role_users"."role_id" IN (5))',
      'INSERT INTO "perm_role_users" ("role_id", "user_id") VALUES (5, 25) RETURNING "perm_role_users"."id"',
      'SELECT "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."level", "org_usernode"."tree_id" FROM "org_usernode" WHERE "org_usernode"."id" = 3 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC LIMIT 1',
      '\n            UPDATE "org_usernode"\n            SET "lft" = CASE\n                    WHEN "lft" > 5\n                        THEN "lft" + 2\n                    ELSE "lft" END,\n                "rght" = CASE\n                    WHEN "rght" > 5\n                        THEN "rght" + 2\n                    ELSE "rght" END\n            WHERE "tree_id" = 1\n              AND ("lft" > 5 OR "rght" > 5)',
      'INSERT INTO "org_usernode" ("user_id", "parent_id", "lft", "rght", "tree_id", "level") VALUES (25, 3, 6, 7, 1, 1) RETURNING "org_usernode"."id"',
      'INSERT INTO "org_organizationuser" ("organization_id", "user_id") VALUES (4, 25) RETURNING "org_organizationuser"."id"',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 25'
    ],
    'warning': [
      {
        'prefix': "select perm_role ['perm_role_users'] ['perm_role_users.user_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/user_node/user_nodes/4/edit_user_roles',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'8qez78lz4reivmw47cflbro731l2hk0j\' AND "django_session"."expire_date" > \'2020-02-26T03:12:39.753828+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level", "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "org_usernode" INNER JOIN "auth_user" ON ("org_usernode"."user_id" = "auth_user"."id") , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "org_usernode"."id", (select \'create,update,destroy\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 9) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 3)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) as t group by id) as t WHERE ((t.id = org_usernode.id) AND "org_usernode"."id" = 4) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'perm.role\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'attach_user\']::varchar(127)[]))',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 1',
      'SELECT (t._actions) AS "_actions", "perm_role"."id" FROM "perm_role" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "perm_role"."id", (select \'attach_user,retrieve\') AS "_actions" FROM "perm_role") as t group by id) as t WHERE (t.id = perm_role.id)',
      'SELECT "logic_organization"."id" FROM "logic_organization" INNER JOIN "org_organizationuser" ON ("logic_organization"."id" = "org_organizationuser"."organization_id") WHERE "org_organizationuser"."user_id" = 12 FOR UPDATE',
      'SELECT "perm_role"."id" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 4',
      'DELETE FROM "perm_role_users" WHERE ("perm_role_users"."user_id" = 4 AND "perm_role_users"."role_id" IN (5))',
      'SELECT "perm_role_users"."role_id" FROM "perm_role_users" WHERE ("perm_role_users"."user_id" = 4 AND "perm_role_users"."role_id" IN (2))',
      'INSERT INTO "perm_role_users" ("role_id", "user_id") VALUES (2, 4) RETURNING "perm_role_users"."id"',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 4'
    ],
    'warning': [
      {
        'prefix': "select perm_role ['perm_role_users'] ['perm_role_users.user_id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/user_node/user_nodes/10/change_parent',
    'type': 'POST',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'zzad94xzjoc7gke0ko4h333dh68qe0yj\' AND "django_session"."expire_date" > \'2020-02-26T03:12:41.048901+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 12',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'update\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "org_usernode"."id", (select \'create,update,destroy\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 9) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 2 AND "org_usernode"."lft" <= 3)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) as t group by id) as t WHERE ((t.id = org_usernode.id) AND "org_usernode"."id" = 10) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_rolepolicy"."id", "perm_rolepolicy"."created_at", "perm_rolepolicy"."updated_at", "perm_rolepolicy"."role_id", "perm_rolepolicy"."resource_type_id", "perm_rolepolicy"."resource_scope", "perm_rolepolicy"."conditions", "perm_rolepolicy"."actions", "perm_rolepolicy"."comment" FROM "perm_rolepolicy" INNER JOIN "perm_role" ON ("perm_rolepolicy"."role_id" = "perm_role"."id") LEFT OUTER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") INNER JOIN "perm_resourcetype" ON ("perm_rolepolicy"."resource_type_id" = "perm_resourcetype"."id") WHERE (("perm_role_users"."user_id" = 12 OR "perm_role"."code_name" = \'default\') AND "perm_resourcetype"."code_name" = \'org.usernode\' AND ("perm_rolepolicy"."actions" @> ARRAY[\'*\']::varchar(127)[] OR "perm_rolepolicy"."actions" && ARRAY[\'assign_child\']::varchar(127)[]))',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
      'SELECT (t._actions) AS "_actions", "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" , (select id, string_agg(_actions::text, \',\') as _actions from (SELECT "org_usernode"."id", (select \'assign_child\') AS "_actions" FROM "org_usernode" WHERE (("org_usernode"."tree_id" = 1 AND "org_usernode"."lft" >= 1 AND "org_usernode"."lft" <= 10) OR ("org_usernode"."tree_id" = 2 AND "org_usernode"."lft" >= 1 AND "org_usernode"."lft" <= 4)) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC) as t group by id) as t WHERE ((t.id = org_usernode.id) AND "org_usernode"."id" = 4) ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
      'SELECT "logic_organization"."id" FROM "logic_organization" INNER JOIN "org_organizationuser" ON ("logic_organization"."id" = "org_organizationuser"."organization_id") WHERE "org_organizationuser"."user_id" = 12 FOR UPDATE',
      '\n            UPDATE "org_usernode"\n            SET "lft" = CASE\n                    WHEN "lft" > 2\n                        THEN "lft" + 2\n                    ELSE "lft" END,\n                "rght" = CASE\n                    WHEN "rght" > 2\n                        THEN "rght" + 2\n                    ELSE "rght" END\n            WHERE "tree_id" = 1\n              AND ("lft" > 2 OR "rght" > 2)',
      '\n        UPDATE "org_usernode"\n        SET "level" = CASE\n                WHEN "lft" >= 2 AND "lft" <= 3\n                    THEN "level" -  -1\n                ELSE "level" END,\n            "tree_id" = CASE\n                WHEN "lft" >= 2 AND "lft" <= 3\n                    THEN 1\n                ELSE "tree_id" END,\n            "lft" = CASE\n                WHEN "lft" >= 2 AND "lft" <= 3\n                    THEN "lft" -  -1\n                WHEN "lft" > 1\n                    THEN "lft" - 2\n                ELSE "lft" END,\n            "rght" = CASE\n                WHEN "rght" >= 2 AND "rght" <= 3\n                    THEN "rght" -  -1\n                WHEN "rght" > 1\n                    THEN "rght" - 2\n                ELSE "rght" END\n        WHERE "tree_id" = 2',
      'UPDATE "org_usernode" SET "user_id" = 15, "parent_id" = 4, "lft" = 3, "rght" = 4, "tree_id" = 1, "level" = 2 WHERE "org_usernode"."id" = 10',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 15',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" INNER JOIN "perm_role_users" ON ("perm_role"."id" = "perm_role_users"."role_id") WHERE "perm_role_users"."user_id" = 15'
    ],
    'errors': [
      {
        'sql': 'SELECT "perm_resourcetype"."id", "perm_resourcetype"."created_at", "perm_resourcetype"."updated_at", "perm_resourcetype"."name", "perm_resourcetype"."code_name", "perm_resourcetype"."comment" FROM "perm_resourcetype" WHERE "perm_resourcetype"."id" = 6',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'sql': 'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" = 12 ORDER BY "org_usernode"."tree_id" ASC, "org_usernode"."lft" ASC',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      }
    ],
    'warning': [
      {
        'prefix': "select org_usernode ['t'] ['t.id.=', 'org_usernode.id.=', 'sort:org_usernode.tree_id', 'sort:org_usernode.lft']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      },
      {
        'prefix': "select auth_user [] ['auth_user.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/guard_admin/guard_admins/19',
    'type': 'DELETE',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'d00qd4r7h316g1ihyv4r3ql96uzpbm46\' AND "django_session"."expire_date" > \'2020-02-26T03:12:46.596767+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT "guard_guardadmin"."id", "guard_guardadmin"."organization_id", "guard_guardadmin"."phone_number", "guard_guardadmin"."created_at", "guard_guardadmin"."updated_at", "guard_guardadmin"."phone_number_verified" FROM "guard_guardadmin" WHERE "guard_guardadmin"."id" = 19 FOR UPDATE',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 19 FOR UPDATE',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 19',
      'SELECT "logic_sitemanager"."created_at", "logic_sitemanager"."updated_at", "logic_sitemanager"."id", "logic_sitemanager"."customer_id", "logic_sitemanager"."phone", "logic_sitemanager"."level" FROM "logic_sitemanager" WHERE "logic_sitemanager"."id" IN (19)',
      'SELECT "logic_box"."created_at", "logic_box"."updated_at", "logic_box"."id", "logic_box"."user_id", "logic_box"."timezone", "logic_box"."ip_address", "logic_box"."max_camera_cnt", "logic_box"."max_detect_cnt", "logic_box"."paid_cnt", "logic_box"."camera_cnt", "logic_box"."state", "logic_box"."billing", "logic_box"."meta", "logic_box"."type", "logic_box"."scene", "logic_box"."sequence", "logic_box"."upload_video_expire", "logic_box"."upload_event_expire", "logic_box"."session_id", "logic_box"."version", "logic_box"."site_id" FROM "logic_box" WHERE "logic_box"."user_id" IN (19)',
      'SELECT "logic_robot"."created_at", "logic_robot"."updated_at", "logic_robot"."id", "logic_robot"."user_id", "logic_robot"."saving_at", "logic_robot"."robox_status", "logic_robot"."status", "logic_robot"."state", "logic_robot"."meta", "logic_robot"."snapshot", "logic_robot"."snapshots", "logic_robot"."timezone", "logic_robot"."ip_address", "logic_robot"."type", "logic_robot"."name", "logic_robot"."detect_params", "logic_robot"."patrol_params", "logic_robot"."mac_params", "logic_robot"."cameras", "logic_robot"."auto_speak", "logic_robot"."notifies", "logic_robot"."upload_video_enabled", "logic_robot"."upload_video_expire", "logic_robot"."upload_event_expire", "logic_robot"."scene", "logic_robot"."sequence", "logic_robot"."session_id", "logic_robot"."version", "logic_robot"."site_id", "logic_robot"."enable_escalation", "logic_robot"."should_push" FROM "logic_robot" WHERE "logic_robot"."user_id" IN (19)',
      'SELECT "logic_camera"."created_at", "logic_camera"."updated_at", "logic_camera"."id", "logic_camera"."user_id", "logic_camera"."saving_at", "logic_camera"."name", "logic_camera"."raw_address", "logic_camera"."mac_address", "logic_camera"."box_id", "logic_camera"."type", "logic_camera"."brand", "logic_camera"."username", "logic_camera"."password", "logic_camera"."uri", "logic_camera"."hd_uri", "logic_camera"."mode", "logic_camera"."upload_video_enabled", "logic_camera"."location", "logic_camera"."detect_params", "logic_camera"."snapshot", "logic_camera"."state", "logic_camera"."notifies", "logic_camera"."should_push", "logic_camera"."version", "logic_camera"."note", "logic_camera"."default_params" FROM "logic_camera" WHERE "logic_camera"."user_id" IN (19)',
      'SELECT "logic_route"."id", "logic_route"."user_id", "logic_route"."name", "logic_route"."points", "logic_route"."checkpoints", "logic_route"."version" FROM "logic_route" WHERE "logic_route"."user_id" IN (19)',
      'SELECT "logic_organization"."id", "logic_organization"."created_at", "logic_organization"."updated_at", "logic_organization"."code_name", "logic_organization"."name", "logic_organization"."owner_id", "logic_organization"."event_type_mode" FROM "logic_organization" WHERE "logic_organization"."owner_id" IN (19)',
      'SELECT "bill_customer"."created_at", "bill_customer"."updated_at", "bill_customer"."id", "bill_customer"."stripe_id", "bill_customer"."status", "bill_customer"."balance", "bill_customer"."guard_company_id", "bill_customer"."enable_monitoring_service" FROM "bill_customer" INNER JOIN "auth_user" ON ("bill_customer"."id" = "auth_user"."id") WHERE "bill_customer"."id" IN (19) ORDER BY "auth_user"."username" ASC',
      'SELECT "bill_distributor"."created_at", "bill_distributor"."updated_at", "bill_distributor"."id", "bill_distributor"."name", "bill_distributor"."balance" FROM "bill_distributor" WHERE "bill_distributor"."id" IN (19)',
      'SELECT "bill_seller"."created_at", "bill_seller"."updated_at", "bill_seller"."distributor_id", "bill_seller"."id", "bill_seller"."name", "bill_seller"."balance" FROM "bill_seller" WHERE "bill_seller"."id" IN (19)',
      'SELECT "bill_employee"."created_at", "bill_employee"."updated_at", "bill_employee"."id", "bill_employee"."seller_id", "bill_employee"."deleted" FROM "bill_employee" WHERE "bill_employee"."id" IN (19)',
      'SELECT "bill_client"."id", "bill_client"."created_at", "bill_client"."updated_at", "bill_client"."seller_id", "bill_client"."user_id", "bill_client"."employee_id", "bill_client"."name" FROM "bill_client" WHERE "bill_client"."user_id" IN (19)',
      'SELECT "guard_monitoringoperator"."id", "guard_monitoringoperator"."organization_id", "guard_monitoringoperator"."created_at", "guard_monitoringoperator"."updated_at", "guard_monitoringoperator"."phone_number", "guard_monitoringoperator"."phone_number_verified" FROM "guard_monitoringoperator" WHERE "guard_monitoringoperator"."id" IN (19)',
      'SELECT "guard_guardadmin"."id", "guard_guardadmin"."organization_id", "guard_guardadmin"."phone_number", "guard_guardadmin"."created_at", "guard_guardadmin"."updated_at", "guard_guardadmin"."phone_number_verified" FROM "guard_guardadmin" WHERE "guard_guardadmin"."id" IN (19)',
      'SELECT "guard_guard"."id", "guard_guard"."organization_id", "guard_guard"."phone_number", "guard_guard"."created_at", "guard_guard"."updated_at", "guard_guard"."phone_number_verified" FROM "guard_guard" WHERE "guard_guard"."id" IN (19)',
      'SELECT "org_usernode"."id", "org_usernode"."user_id", "org_usernode"."parent_id", "org_usernode"."lft", "org_usernode"."rght", "org_usernode"."tree_id", "org_usernode"."level" FROM "org_usernode" WHERE "org_usernode"."user_id" IN (19)',
      'DELETE FROM "django_admin_log" WHERE "django_admin_log"."user_id" IN (19)',
      'DELETE FROM "auth_user_groups" WHERE "auth_user_groups"."user_id" IN (19)',
      'DELETE FROM "auth_user_user_permissions" WHERE "auth_user_user_permissions"."user_id" IN (19)',
      'DELETE FROM "push_notifications_gcmdevice" WHERE "push_notifications_gcmdevice"."user_id" IN (19)',
      'DELETE FROM "push_notifications_apnsdevice" WHERE "push_notifications_apnsdevice"."user_id" IN (19)',
      'DELETE FROM "push_notifications_wnsdevice" WHERE "push_notifications_wnsdevice"."user_id" IN (19)',
      'DELETE FROM "logic_person" WHERE "logic_person"."id" IN (19)',
      'DELETE FROM "logic_agent" WHERE "logic_agent"."user_id" IN (19)',
      'DELETE FROM "logic_monitor" WHERE "logic_monitor"."id" IN (19)',
      'DELETE FROM "back_feedback" WHERE "back_feedback"."user_id" IN (19)',
      'DELETE FROM "bill_boxpricing" WHERE "bill_boxpricing"."user_id" IN (19)',
      'DELETE FROM "guard_note" WHERE "guard_note"."user_id" IN (19)',
      'DELETE FROM "guard_casehistory" WHERE "guard_casehistory"."user_id" IN (19)',
      'DELETE FROM "perm_role_users" WHERE "perm_role_users"."user_id" IN (19)',
      'DELETE FROM "org_organizationuser" WHERE "org_organizationuser"."user_id" IN (19)',
      'DELETE FROM "org_organizationdelegate" WHERE "org_organizationdelegate"."user_id" IN (19)',
      'DELETE FROM "org_domainuser" WHERE "org_domainuser"."user_id" IN (19)',
      'DELETE FROM "guard_guardadmin" WHERE "guard_guardadmin"."id" IN (19)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 19',
      'SELECT "perm_role"."id", "perm_role"."created_at", "perm_role"."updated_at", "perm_role"."name", "perm_role"."code_name" FROM "perm_role" WHERE "perm_role"."code_name" = \'guard_admin\' ORDER BY "perm_role"."id" ASC LIMIT 1',
      'SELECT (1) AS "a" FROM "auth_user" INNER JOIN "perm_role_users" ON ("auth_user"."id" = "perm_role_users"."user_id") WHERE ("perm_role_users"."role_id" = 11 AND "auth_user"."id" = 19) LIMIT 1',
      'DELETE FROM "auth_user" WHERE "auth_user"."id" IN (19)',
      'SELECT "guard_guardadmin"."id", "guard_guardadmin"."organization_id", "guard_guardadmin"."phone_number", "guard_guardadmin"."created_at", "guard_guardadmin"."updated_at", "guard_guardadmin"."phone_number_verified" FROM "guard_guardadmin" WHERE "guard_guardadmin"."id" = 19'
    ],
    'errors': [
      {
        'sql': 'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 19',
        'error_type': 'sql_repeat',
        'error_info': 'SQL statements have duplication.',
        'repeat_number': 2
      },
      {
        'error_type': 'sql_much',
        'error_info': 'Interface calls SQL statements too many, the sql_number parameter value is exceeded.',
        'sql_number': 42
      }
    ],
    'warning': [
      {
        'prefix': "select auth_user [] ['auth_user.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      },
      {
        'prefix': "select guard_guardadmin [] ['guard_guardadmin.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/guard_admin/guard_admins',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'6kdmi1ie1a5fwt85zx76swc6z8ph4oct\' AND "django_session"."expire_date" > \'2020-02-26T03:12:47.870795+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT COUNT(*) AS "__count" FROM "guard_guardadmin"',
      'SELECT "guard_guardadmin"."id", "guard_guardadmin"."organization_id", "guard_guardadmin"."phone_number", "guard_guardadmin"."created_at", "guard_guardadmin"."updated_at", "guard_guardadmin"."phone_number_verified", "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "guard_guardadmin" INNER JOIN "auth_user" ON ("guard_guardadmin"."id" = "auth_user"."id") ORDER BY "guard_guardadmin"."id" ASC LIMIT 10',
      'SELECT "guard_guardcompany"."id", "guard_guardcompany"."title", "guard_guardcompany"."created_at", "guard_guardcompany"."updated_at" FROM "guard_guardcompany" WHERE "guard_guardcompany"."id" = 1',
      'SELECT "guard_guardcompany"."id", "guard_guardcompany"."title", "guard_guardcompany"."created_at", "guard_guardcompany"."updated_at" FROM "guard_guardcompany" WHERE "guard_guardcompany"."id" = 2'
    ],
    'errors': [
      {
        'sql': 'SELECT COUNT(*) AS "__count" FROM "guard_guardadmin"',
        'error_type': 'sql_black',
        'error_info': 'SQL statement query range is too large.'
      }
    ],
    'warning': [
      {
        'prefix': "select guard_guardcompany [] ['guard_guardcompany.id.=']",
        'error_type': 'sql_redundant',
        'error_info': 'SQL statement redundancy.',
        'sql_redundant': 2
      }
    ]
  },
  {
    'url': '/api/v1/guard_company/guard_companies',
    'type': 'GET',
    'all_sql': [
      'SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = \'h9rlw8tjyrnbkxxd8lix15suijadh2c4\' AND "django_session"."expire_date" > \'2020-02-26T03:12:48.504744+00:00\'::timestamptz)',
      'SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined", "auth_user"."username", "auth_user"."updated_at", "auth_user"."role", "auth_user"."lang", "auth_user"."nonce", "auth_user"."timezone" FROM "auth_user" WHERE "auth_user"."id" = 1',
      'SELECT COUNT(*) AS "__count" FROM "guard_guardcompany"',
      'SELECT "guard_guardcompany"."id", "guard_guardcompany"."title", "guard_guardcompany"."created_at", "guard_guardcompany"."updated_at" FROM "guard_guardcompany" LIMIT 10'
    ],
    'errors': [
      {
        'sql': 'SELECT COUNT(*) AS "__count" FROM "guard_guardcompany"',
        'error_type': 'sql_black',
        'error_info': 'SQL statement query range is too large.'
      }
    ]
  }
]
